
var PROJECT='Gate'
var VERSION='0.4.0'
var FULL_VERSION='${VERSION}-ctp1'
var AUTHORS='${PROJECT} contributors'

var BASE_DIR='${Directory.GetCurrentDirectory()}'
var TARGET_DIR='${Path.Combine(BASE_DIR, "target")}'
var BUILD_DIR='${Path.Combine(TARGET_DIR, "build")}'
var TEST_DIR='${Path.Combine(TARGET_DIR, "test")}'

var TEST_ASSEMBLIES='${Files.Include("target/test/**/*.Tests.dll").Exclude("target/test/**/HttpListener.Tests.dll")}'

var NUGET_GALLERY_SOURCE='https://nuget.org/api/v2/'
var NUGET_ASPNET_SOURCE='http://www.myget.org/F/aspnetwebstacknightly/'
var NUGET_GATE_DEPLOY='http://www.myget.org/F/gate/'

-// include range of standard general targets. run "sake targets" to display
use-standard-lifecycle

-// include sets of standard work targets. features include 'nuget,xunit,nunit'
use-standard-goals features='nuget,nunit'

-// additional work targets are defined below

#nuget-initialize target='initialize'
  nuget-install each='var package in Files.Include("src/**/packages.config")' outputDir='packages' extra='-Source ${NUGET_GALLERY_SOURCE};${NUGET_ASPNET_SOURCE}'
  
#nuget-deploy target='deploy' description='Upload NuGet packages to gallery'
  nuget-push each='var nupkgFile in Files.Include("target/*.nupkg")' extra='-Source ${NUGET_GATE_DEPLOY}'

#release
  @{
    // To publish, call `build release deploy`
    NUGET_GATE_DEPLOY = 'https://nuget.org/api/v2/';
    FULL_VERSION = VERSION;
  }

#sources-package-prepare target='package-prepare'
  for each='var file in Files.Include("src/**/*.Sources.nuspec")'
    var projectDir='${Path.GetDirectoryName(file)}'
    var projectName='${Path.GetFileName(projectDir)}'
    copy sourceDir='${projectDir}' include='**\*.cs' exclude='**\AssemblyInfo.cs' outputDir='${BUILD_DIR}\${projectName}' overwrite='${true}'
    update-file each='var updateFile in Files.Include(BUILD_DIR + "/" + projectName + "/**/*.cs")'
      @{
        updateText = updateText
          .Replace("public static partial class", "internal static partial class")
          .Replace("public static class", "internal static class")
          .Replace("public class", "internal class")
          .Replace("public enum", "internal enum");
      }
